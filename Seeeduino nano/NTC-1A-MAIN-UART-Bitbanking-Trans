// ============================
// Seeeduino Nano 用（メイン送信側）
// D2: TX, D3: RX（ビットバンギング）
// ============================
#define TX_PIN 2
#define RX_PIN 3
#define BB_BAUD 300
#define BIT_DELAY (1000000UL / BB_BAUD)
#define HALF_DELAY (BIT_DELAY / 2)

uint8_t send_buf[6] = {0x01, 0x06, 0x09, 0x00, 0x00, 0x10};
uint8_t recv_buf[6];

void setup() {
  pinMode(TX_PIN, OUTPUT);
  digitalWrite(TX_PIN, HIGH);
  pinMode(RX_PIN, INPUT_PULLUP);
  Serial.begin(9600);
  delay(1000);
  Serial.println("[MAIN] Ready");

  send_packet();
  if (receive_packet()) {
    Serial.println("[MAIN] Response:");
    dump_packet(recv_buf);
  } else {
    Serial.println("[MAIN] Timeout or invalid");
  }
}

void loop() {
  delay(5000); // 周期送信
  send_packet();
  if (receive_packet()) {
    Serial.println("[MAIN] Response:");
    dump_packet(recv_buf);
  } else {
    Serial.println("[MAIN] Timeout or invalid");
  }
}

void send_packet() {
  for (int i = 0; i < 6; i++) send_bitbang_byte(send_buf[i]);
}

void send_bitbang_byte(uint8_t b) {
  digitalWrite(TX_PIN, LOW);
  delayMicroseconds(BIT_DELAY);
  for (int i = 0; i < 8; i++) {
    digitalWrite(TX_PIN, (b >> i) & 0x01);
    delayMicroseconds(BIT_DELAY);
  }
  digitalWrite(TX_PIN, HIGH);
  delayMicroseconds(BIT_DELAY);
}

bool receive_packet() {
  for (int i = 0; i < 6; i++) {
    if (!receive_bitbang_byte(recv_buf[i])) return false;
  }
  return true;
}

bool receive_bitbang_byte(uint8_t &b) {
  unsigned long start = millis();
  while (digitalRead(RX_PIN) == HIGH) {
    if (millis() - start > 1000) return false;
  }
  delayMicroseconds(HALF_DELAY);
  if (digitalRead(RX_PIN) != LOW) return false;
  delayMicroseconds(HALF_DELAY);

  b = 0;
  for (int i = 0; i < 8; i++) {
    delayMicroseconds(BIT_DELAY);
    b |= (digitalRead(RX_PIN) << i);
  }
  delayMicroseconds(BIT_DELAY);  // stop bit
  return true;
}

void dump_packet(uint8_t *buf) {
  for (int i = 0; i < 6; i++) {
    Serial.print("0x");
    if (buf[i] < 0x10) Serial.print("0");
    Serial.print(buf[i], HEX);
    Serial.print(" ");
  }
  Serial.println();
}

